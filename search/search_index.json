{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"index","text":""},{"location":"#types","title":"Types","text":"<ul> <li>alias CharacterGroup</li> <li>alias StriplinePattern</li> <li>class Module</li> <li>class Url</li> </ul>"},{"location":"#globals","title":"Globals","text":"<ul> <li>boolean</li> <li>dir</li> <li>file</li> <li>gzip</li> <li>inspect</li> <li>io</li> <li>lfs</li> <li>lpeg</li> <li>lua</li> <li>lualibs</li> <li>math</li> <li>modules</li> <li>number</li> <li>optionalrequire</li> <li>os</li> <li>package</li> <li>set</li> <li>setinspector</li> <li>statistics</li> <li>toboolean</li> <li>trackers</li> <li>url</li> <li>utf</li> <li>utilities</li> </ul>"},{"location":"globals/boolean/","title":"global boolean","text":""},{"location":"globals/boolean/#methods","title":"methods","text":""},{"location":"globals/boolean/#booleantonumber","title":"boolean.tonumber","text":"<pre><code>function boolean.tonumber(value: any) -&gt;  integer\n</code></pre> <p>Return the number one or zero.</p> <p>Reference:</p> <ul> <li>Context Lua Documents, July 8, 2023: page 77</li> <li>Corresponding source code: lualibs-boolean.lua#L14-L16</li> </ul>"},{"location":"globals/dir/","title":"global dir","text":""},{"location":"globals/dir/#methods","title":"methods","text":""},{"location":"globals/dir/#dircurrent","title":"dir.current","text":"<pre><code>function dir.current()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding source code: lualibs-dir.lua#L74-L76</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/dir/#dirglobpattern","title":"dir.globpattern","text":"<pre><code>function dir.globpattern(\n  path,\n  patt,\n  recurse,\n  method\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding source code: lualibs-dir.lua#L169-L182</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/dir/#dircollectpattern","title":"dir.collectpattern","text":"<pre><code>function dir.collectpattern(\n  path,\n  patt,\n  recurse,\n  result\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding source code: lualibs-dir.lua#L188-L221</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/dir/#dirglob","title":"dir.glob","text":"<pre><code>function dir.glob(\n  str,\n  t\n)\n</code></pre> <p>Example:</p> <pre><code>local list = dir.glob(\"e:/**\")\nlocal list = dir.glob(\"t:/sources/**\")\nlocal list = dir.glob(\"**/*.tif\")\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding source code: lualibs-dir.lua#L259-L302</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/dir/#dirglobfiles","title":"dir.globfiles","text":"<pre><code>function dir.globfiles(\n  path,\n  recurse,\n  func,\n  files\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding source code: lualibs-dir.lua#L321-L348</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/dir/#dirglobdirs","title":"dir.globdirs","text":"<pre><code>function dir.globdirs(\n  path,\n  recurse,\n  func,\n  files\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding source code: lualibs-dir.lua#L352-L378</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/dir/#dirls","title":"dir.ls","text":"<pre><code>function dir.ls(pattern: string) -&gt;  string\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding source code: lualibs-dir.lua#L391-L393</li> </ul>"},{"location":"globals/dir/#dirmakedirs","title":"dir.makedirs","text":"<pre><code>function dir.makedirs(...: string)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding source code: lualibs-dir.lua#L402-L536</li> </ul>"},{"location":"globals/dir/#dirmkdirs","title":"dir.mkdirs","text":"<pre><code>function dir.mkdirs(...: string)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding source code: lualibs-dir.lua#L402-L536</li> </ul>"},{"location":"globals/dir/#direxpandname","title":"dir.expandname","text":"<pre><code>function dir.expandname(str: string)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding source code: lualibs-dir.lua#L553-L597</li> </ul>"},{"location":"globals/dir/#dirpush","title":"dir.push","text":"<pre><code>function dir.push()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding source code: lualibs-dir.lua#L605-L613</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/dir/#dirpop","title":"dir.pop","text":"<pre><code>function dir.pop()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding source code: lualibs-dir.lua#L615-L621</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/dir/#dirfound","title":"dir.found","text":"<pre><code>function dir.found()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding source code: lualibs-dir.lua#L623-L640</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/file/","title":"global file","text":""},{"location":"globals/file/#methods","title":"methods","text":""},{"location":"globals/file/#filepathpart","title":"file.pathpart","text":"<pre><code>function file.pathpart(\n  filename: string,\n  default\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-file.lua#L122-L124</li> </ul>"},{"location":"globals/file/#filedirname","title":"file.dirname","text":"<pre><code>function file.dirname(\n  filename: string,\n  default\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-file.lua#L169</li> </ul> <p>@deprecated Deprecated</p> <p>@see file.pathpart</p>"},{"location":"globals/file/#filebasename","title":"file.basename","text":"<pre><code>function file.basename(filename: string)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-file.lua#L128-L130</li> </ul>"},{"location":"globals/file/#filenameonly","title":"file.nameonly","text":"<pre><code>function file.nameonly(filename: string)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-file.lua#L141-L143</li> </ul>"},{"location":"globals/file/#filesuffixonly","title":"file.suffixonly","text":"<pre><code>function file.suffixonly(filename: string)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-file.lua#L147-L149</li> </ul>"},{"location":"globals/file/#fileextname","title":"file.extname","text":"<pre><code>function file.extname(filename: string)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding C source code: lualibs-file.lua#L170</li> </ul>"},{"location":"globals/file/#filesuffix","title":"file.suffix","text":"<pre><code>function file.suffix(filename: string)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-file.lua#L147-L149</li> </ul> <p>@see file.suffixonly</p>"},{"location":"globals/file/#filesuffixesonly","title":"file.suffixesonly","text":"<pre><code>function file.suffixesonly(filename: string)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-file.lua#L153-L159</li> </ul>"},{"location":"globals/file/#filesuffixes","title":"file.suffixes","text":"<pre><code>function file.suffixes(filename: string)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-file.lua#L153-L159</li> </ul> <p>@see file.suffixesonly</p>"},{"location":"globals/file/#filesplitname","title":"file.splitname","text":"<pre><code>function file.splitname(\n  filename: string,\n  splitdrive\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-file.lua#L190-L198</li> </ul>"},{"location":"globals/file/#filesplitbase","title":"file.splitbase","text":"<pre><code>function file.splitbase(filename: string)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-file.lua#L200-L206</li> </ul>"},{"location":"globals/file/#filenametotable","title":"file.nametotable","text":"<pre><code>function file.nametotable(\n  filename: string,\n  splitdrive\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-file.lua#L210-L234</li> </ul>"},{"location":"globals/file/#fileremovesuffix","title":"file.removesuffix","text":"<pre><code>function file.removesuffix(filename: string)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-file.lua#L253-L255</li> </ul>"},{"location":"globals/file/#fileaddsuffix","title":"file.addsuffix","text":"<pre><code>function file.addsuffix(\n  filename: string,\n  suffix,\n  criterium\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-file.lua#L271-L303</li> </ul>"},{"location":"globals/file/#filereplacesuffix","title":"file.replacesuffix","text":"<pre><code>function file.replacesuffix(\n  filename: string,\n  suffix\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-file.lua#L317-L323</li> </ul>"},{"location":"globals/file/#filereslash","title":"file.reslash","text":"<pre><code>function file.reslash(filename: string)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-file.lua#L329-L331</li> </ul>"},{"location":"globals/file/#fileiswritable","title":"file.iswritable","text":"<pre><code>function file.iswritable(filename: string)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-file.lua#L394</li> </ul> <p>@deprecated Deprecated</p> <p>@see file.is_writable</p>"},{"location":"globals/file/#fileis_writable","title":"file.is_writable","text":"<pre><code>function file.is_writable(filename: string)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-file.lua#L352-L378</li> </ul>"},{"location":"globals/file/#fileisreadable","title":"file.isreadable","text":"<pre><code>function file.isreadable(filename: string)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-file.lua#L393</li> </ul> <p>@deprecated Deprecated</p> <p>@see file.is_readable</p>"},{"location":"globals/file/#fileis_readable","title":"file.is_readable","text":"<pre><code>function file.is_readable(filename: string)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-file.lua#L382-L389</li> </ul>"},{"location":"globals/file/#filesize","title":"file.size","text":"<pre><code>function file.size(filename: string)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-file.lua#L396-L403</li> </ul>"},{"location":"globals/file/#filesplitpath","title":"file.splitpath","text":"<pre><code>function file.splitpath(\n  filename: string,\n  separator\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-file.lua#L405-L407</li> </ul>"},{"location":"globals/file/#filesplit_path","title":"file.split_path","text":"<pre><code>function file.split_path(\n  filename: string,\n  separator\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-compat.lua#L30</li> </ul> <p>@see file.splitpath</p>"},{"location":"globals/file/#filejoinpath","title":"file.joinpath","text":"<pre><code>function file.joinpath(\n  tab,\n  separator\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-file.lua#L409-L411</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/file/#filejoin","title":"file.join","text":"<pre><code>function file.join(\n  one,\n  two,\n  three,\n  ...\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-file.lua#L455-L480</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/file/#filecollapsepath","title":"file.collapsepath","text":"<pre><code>function file.collapsepath(\n  filename: string,\n  anchor\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-file.lua#L545-L597</li> </ul>"},{"location":"globals/file/#filecollapse_path","title":"file.collapse_path","text":"<pre><code>function file.collapse_path(\n  filename: string,\n  anchor\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-file.lua#L545-L597</li> </ul> <p>@deprecated Deprecated</p> <p>@see file.collapsepath</p>"},{"location":"globals/file/#filerobustname","title":"file.robustname","text":"<pre><code>function file.robustname(\n  filename: string,\n  strict\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-file.lua#L617-L626</li> </ul>"},{"location":"globals/file/#filecopy","title":"file.copy","text":"<pre><code>function file.copy(\n  oldname: string,\n  newname\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-file.lua#L634-L641</li> </ul>"},{"location":"globals/file/#fileis_qualified_path","title":"file.is_qualified_path","text":"<pre><code>function file.is_qualified_path(filename: string)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-file.lua#L660-L662</li> </ul>"},{"location":"globals/file/#fileis_rootbased_path","title":"file.is_rootbased_path","text":"<pre><code>function file.is_rootbased_path(filename: string)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-file.lua#L664-L666</li> </ul>"},{"location":"globals/file/#filestrip","title":"file.strip","text":"<pre><code>function file.strip(\n  filename: string,\n  dir\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-file.lua#L686-L691</li> </ul>"},{"location":"globals/file/#filewithinbase","title":"file.withinbase","text":"<pre><code>function file.withinbase(filename: string)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-file.lua#L724-L740</li> </ul>"},{"location":"globals/file/#fileneedsupdating","title":"file.needsupdating","text":"<pre><code>function file.needsupdating()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-md5.lua#L62-L78</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/file/#fileneeds_updating","title":"file.needs_updating","text":"<pre><code>function file.needs_updating()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-md5.lua#L62-L78</li> </ul> <p>@deprecated Deprecated</p> <p>@see file.needsupdating</p>"},{"location":"globals/file/#filesyncmtimes","title":"file.syncmtimes","text":"<pre><code>function file.syncmtimes()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-md5.lua#L82-L87</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/file/#filechecksum","title":"file.checksum","text":"<pre><code>function file.checksum()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-md5.lua#L89-L97</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/file/#fileloadchecksum","title":"file.loadchecksum","text":"<pre><code>function file.loadchecksum()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-md5.lua#L101-L107</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/file/#filesavechecksum","title":"file.savechecksum","text":"<pre><code>function file.savechecksum()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-md5.lua#L109-L116</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/file/#fileexpandname","title":"file.expandname","text":"<pre><code>function file.expandname()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-dir.lua#L601</li> </ul> <p>@see dir.expandname</p>"},{"location":"globals/file/#filereaddata","title":"file.readdata","text":"<pre><code>function file.readdata()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-file.lua#L631</li> </ul> <p>@see io.loaddata</p>"},{"location":"globals/file/#filesavedata","title":"file.savedata","text":"<pre><code>function file.savedata()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-file.lua#L632</li> </ul> <p>@see io.savedata</p>"},{"location":"globals/gzip/","title":"global gzip","text":""},{"location":"globals/gzip/#methods","title":"methods","text":""},{"location":"globals/gzip/#gzipsuffix","title":"gzip.suffix","text":"<pre><code>function gzip.suffix(filename: string)\n -&gt; suffix string\n -&gt; gzipped boolean\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-util-zip.lua#L536-L540</li> </ul>"},{"location":"globals/gzip/#gzipcompressed","title":"gzip.compressed","text":"<pre><code>function gzip.compressed(s: string) -&gt; compressed boolean\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-util-zip.lua#L542-L544</li> </ul>"},{"location":"globals/gzip/#gzipload","title":"gzip.load","text":"<pre><code>function gzip.load(filename)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-util-zip.lua#L634-L648</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/gzip/#gzipsave","title":"gzip.save","text":"<pre><code>function gzip.save(\n  filename,\n  data,\n  level,\n  originalname\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-util-zip.lua#L650-L661</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/gzip/#gzipcompress","title":"gzip.compress","text":"<pre><code>function gzip.compress(\n  s,\n  level\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-util-zip.lua#L663-L674</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/gzip/#gzipdecompress","title":"gzip.decompress","text":"<pre><code>function gzip.decompress(s)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-util-zip.lua#L676-L682</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/inspect/","title":"global inspect","text":"<pre><code>function inspect(...)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-lua.lua#L157-L185</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/io/","title":"global io","text":"<p>https://github.com/latex3/lualibs/blob/main/lualibs-io.lua</p>"},{"location":"globals/io/#methods","title":"methods","text":""},{"location":"globals/io/#ioreadall","title":"io.readall","text":"<pre><code>function io.readall(f)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-io.lua#L56-L65</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/io/#ioloaddata","title":"io.loaddata","text":"<p><pre><code>function io.loaddata(\n  filename: string,\n  textmode: any\n) -&gt;  any\n</code></pre> @param <code>textmode</code> - non-nil|false triggers non-binary mode in certain operating systems.</p> <p>A wrapper for <code>io.open</code>. Automatically supplies the <code>r</code> flag and handles opening and closing, returns the complete content of file <code>filename</code>. The optional argument <code>textmode</code> when non-nil|false triggers non-binary mode in certain operating systems.</p> <p>Example:</p> <pre><code>local f = io.open(\"./text.txt\", \"w\")\nif f then\n  f:write(\"Some Text.\")\n  f:close()\nend\n\nlocal text = io.loaddata(\"./text.txt\")\nio.write(text)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-io.lua#L69-L82</li> <li>ConTeXt wiki: ConTeXt and Lua programming/Extensions to the Lua IO library</li> </ul>"},{"location":"globals/io/#iocopydata","title":"io.copydata","text":"<pre><code>function io.copydata(\n  source,\n  target,\n  action\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-io.lua#L126-L148</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/io/#iosavedata","title":"io.savedata","text":"<pre><code>function io.savedata(\n  filename: string,\n  data: (string|string[]|fun(object: file*)),\n  separator: string?,\n  append: any\n) -&gt;  boolean\n</code></pre> <p>Writes <code>data</code> to file <code>filename</code>. Handles opening and closing routines automatically. <code>data</code> can be generic data, a list or a function. Lists are joined prior to write, using the optional separator as separator (nice for CSV output). Functions are applied to the file object.</p> <p>Example:</p> <pre><code>local text = \"Some Text.\"\n\ntext = text:gsub(\".\\n\", \"\") .. \" and again \" .. text:lower()\nio.savedata(\"./moretext.txt\", text)\nos.execute(\"cat ./moretext.txt\")\n\nlocal sometable = { \"spam\", \"spam\", \"spam\", \"baked beans\", \"spam\" }\nio.savedata(\"./moretext.txt\", sometable, \",\")\nos.execute(\"cat ./moretext.txt &amp;&amp; echo '\\n'\")\n\nlocal function weird_write(obj)\n  for i = 1, 10 do\n    if i % 2 == 0 then\n      obj:write(\"But cool. \")\n    else\n      obj:write(\"Weird. \")\n    end\n  end\n  obj:write(\"\\n\")\nend\n\nio.savedata(\"./weirdtext.txt\", weird_write)\nos.execute(\"cat ./weirdtext.txt\")\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-io.lua#L150-L169</li> <li>ConTeXt wiki: ConTeXt and Lua programming/Extensions to the Lua IO library</li> </ul>"},{"location":"globals/io/#ioloadlines","title":"io.loadlines","text":"<pre><code>function io.loadlines(\n  filename,\n  n\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-io.lua#L179-L235</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/io/#ioloadchunk","title":"io.loadchunk","text":"<pre><code>function io.loadchunk(\n  filename,\n  n\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-io.lua#L239-L248</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/io/#ioexists","title":"io.exists","text":"<pre><code>function io.exists(filename: string) -&gt;  boolean\n</code></pre> <p>Tests for file <code>filename</code>'s existence and returns a boolean accordingly.</p> <p>Example:</p> <pre><code>print(\n  io.exists(\"moretext.txt\") and \"Yes, you're right (as usual)!\"\n    or \"No, you're wasting your time, Sir!\"\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-io.lua#L250-L258</li> <li>ConTeXt wiki: ConTeXt and Lua programming/Extensions to the Lua IO library</li> </ul>"},{"location":"globals/io/#iosize","title":"io.size","text":"<pre><code>function io.size(filename: string) -&gt;  integer\n</code></pre> <p>Returns the byte count of file <code>filename</code> or 0 if the file is not found.</p> <p>Example:</p> <pre><code>local check1 = io.size(\"moretext.txt\")\nlocal check2 = tonumber(\n  io.popen([[du -b moretext.txt | sed -e 's/^\\([0-9]*\\).*/\\1/']]):read(\"*all\")\n)\n\nio.write(\n  \"I counted \"\n    .. check1\n    .. \" bytes, and it's got \"\n    .. check2\n    .. \" bytes according to \u2018du\u2019.\\nTherefore \"\n)\nio.write(\n  check1 == check2 and \"the size info should be reasonably accurate.\\n\"\n    or \"something's thoroughly wrong.\\n\"\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-io.lua#L260-L269</li> <li>ConTeXt wiki: ConTeXt and Lua programming/Extensions to the Lua IO library</li> </ul>"},{"location":"globals/io/#ionoflines","title":"io.noflines","text":"<pre><code>function io.noflines(object: file*) -&gt; line_count integer\n</code></pre> <p>@return <code>line_count</code> - The line count of a file object <code>object</code>.</p> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p> <p>Returns the line count of a file object <code>object</code>.</p> <p>Example:</p> <pre><code>local f = io.popen(\"dmesg\")\nif f then\n  local infolength = io.noflines(f)\n  f:close()\n  print(\"There's \" .. infolength .. \" lines in the kernel ring buffer.\")\nend\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-io.lua#L271-L290</li> <li>ConTeXt wiki: ConTeXt and Lua programming/Extensions to the Lua IO library</li> </ul>"},{"location":"globals/io/#iocharacters","title":"io.characters","text":"<pre><code>function io.characters(\n  object: file*,\n  group: CharacterGroup?\n) -&gt;  fun() -&gt; (string,string?,string?,string?)\n</code></pre> <p>Returns an iterator over the one-byte characters of a file object <code>object</code>. The optional argument <code>group</code> accepts a signed integer which determines the number and byte order of the characters returned simultaneously. Possible values are -4, -2, 1, 2, and 4. Negative values result in the order of the characters to be reversed.</p> <p>Example:</p> <pre><code>local f = io.popen(\"cat ./moretext.txt\")\nif f then\n  for char1, char2 in io.characters(f, 2) do\n    io.write(string.format(\"\u201c%s\u201d, \u201c%s\u201d\\n\", char1, char2 or \"\"))\n  end\n  f:close()\nend\n\nf = io.open(\"./moretext.txt\")\nif f then\n  for char1, char2, char3, char4 in io.characters(f, -4) do\n    io.write(\n      string.format(\n        \"1: \u201c%s\u201d, 2: \u201c%s\u201d, 3: \u201c%s\u201d, 4: \u201c%s\u201d\\n\",\n        char1,\n        char2 or \"\",\n        char3 or \"\",\n        char4 or \"\"\n      )\n    )\n  end\n  f:close()\nend\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-io.lua#L317-L321</li> <li>ConTeXt wiki: ConTeXt and Lua programming/Extensions to the Lua IO library</li> </ul>"},{"location":"globals/io/#iobytes","title":"io.bytes","text":"<pre><code>function io.bytes(\n  object: file*,\n  group: CharacterGroup?\n) -&gt;  fun() -&gt; (string,string?,string?,string?)\n</code></pre> <p>Returns an iterator over the bytes of a file <code>object</code>. As with io.characters, the optional argument <code>group</code> specifies the number and order of the bytes returned simultaneously. If there fewer bytes left at the end of a file than the absolute of <code>group</code>, then the remainder is ignored. Thus to process the whole file make sure that its size is a multiple of <code>group</code>.</p> <p>Example:</p> <pre><code>local f = io.open(\"./moretext.txt\")\nif f then\n  for char1, char2, char3, char4 in io.bytes(f, 4) do\n    io.write(\n      string.format(\n        \"1: \u201c%s\u201d, 2: \u201c%s\u201d, 3: \u201c%s\u201d, 4: \u201c%s\u201d\\n\",\n        char1,\n        char2 or \"\",\n        char3 or \"\",\n        char4 or \"\"\n      )\n    )\n  end\n  f:close()\nend\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-io.lua#L368-L374</li> <li>ConTeXt wiki: ConTeXt and Lua programming/Extensions to the Lua IO library</li> </ul>"},{"location":"globals/io/#ioask","title":"io.ask","text":"<pre><code>function io.ask(\n  question: string,\n  default: string?,\n  options: string[]?\n)\n</code></pre> <p>Interrupts the program flow to wait for user input. Prints the string <code>question</code> to stdout and returns the string given by the user. If a string <code>default</code> is given, it is printed in brackets and returned if the user input is empty. <code>options</code> has to be a list of valid input strings which are then printed in brackets as well; no other strings are accepted if <code>options</code> is specified.</p> <p>Example:</p> <pre><code>local options = {\n  default = \"An African or European swallow?\",\n  other = { \"http://www.style.org/unladenswallow/\", \"42\" },\n}\nlocal someanswer = io.ask(\n  \"What is the air speed velocity of an unladen swallow?\",\n  options.default,\n  options.other\n)\n\nprint(\n  someanswer == options.default\n      and \"I don't know that! /He is thrown into the chasm./\"\n    or \"OK, off you go!\"\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-io.lua#L376-L408</li> <li>ConTeXt wiki: ConTeXt and Lua programming/Extensions to the Lua IO library</li> </ul>"},{"location":"globals/io/#ioreadnumber","title":"io.readnumber","text":"<pre><code>function io.readnumber(\n  object: string,\n  offset: integer,\n  count: integer\n) -&gt;  integer\n</code></pre> <p>Reads <code>count</code> next bytes from a file <code>object</code>, optionally starting at byte <code>offset</code>. The bytes are treated as representing a single integer which is then returned in base 10. Valid byte counts are 1, 2, 4, 8, and 12; throws an error when there are fewer bytes left from the current position to the end of file than count.</p> <p>Example:</p> <pre><code>io.savedata(\"nums.txt\", \"\\001\\001\\001\\001\\002\\002\\002\\002\\003\\003\\003\\003\")\n\nlocal f = io.open(\"nums.txt\", \"r\")\nif f then\n  print(io.readnumber(f, 1))\n  print(io.readnumber(f, 5, 1))\n  print(io.readnumber(f, 4))\n  print(io.readnumber(f, 2))\n  f:close()\nend\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-io.lua#L410-L448</li> <li>ConTeXt wiki: ConTeXt and Lua programming/Extensions to the Lua IO library</li> </ul>"},{"location":"globals/io/#ioreadnumber_1","title":"io.readnumber","text":"<pre><code>function io.readnumber(\n  object: string,\n  count: integer\n) -&gt;  integer\n</code></pre> <p>Reads <code>count</code> next bytes from a file <code>object</code>, optionally starting at byte <code>offset</code>. The bytes are treated as representing a single integer which is then returned in base 10. Valid byte counts are 1, 2, 4, 8, and 12; throws an error when there are fewer bytes left from the current position to the end of file than count.</p> <p>Example:</p> <pre><code>io.savedata(\"nums.txt\", \"\\001\\001\\001\\001\\002\\002\\002\\002\\003\\003\\003\\003\")\n\nlocal f = io.open(\"nums.txt\", \"r\")\nif f then\n  print(io.readnumber(f, 1))\n  print(io.readnumber(f, 5, 1))\n  print(io.readnumber(f, 4))\n  print(io.readnumber(f, 2))\n  f:close()\nend\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-io.lua#L410-L448</li> <li>ConTeXt wiki: ConTeXt and Lua programming/Extensions to the Lua IO library</li> </ul>"},{"location":"globals/io/#ioreadstring","title":"io.readstring","text":"<pre><code>function io.readstring(\n  object: string,\n  offset: integer,\n  length: integer\n) -&gt;  string\n</code></pre> <p>Returns the next <code>length</code> bytes from <code>object</code>, starting from the current position or, optionally, the <code>byte</code> offset.</p> <p>Example:</p> <pre><code>local f = io.open(\"text.txt\", \"r\")\nlocal str = io.readstring(f, 5, 3)\nprint(str)\nif f then\n  f:close()\nend\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-io.lua#L452-L459</li> <li>ConTeXt wiki: ConTeXt and Lua programming/Extensions to the Lua IO library</li> </ul>"},{"location":"globals/io/#ioreadstring_1","title":"io.readstring","text":"<pre><code>function io.readstring(\n  object: string,\n  length: integer\n) -&gt;  string\n</code></pre> <p>Returns the next <code>length</code> bytes from <code>object</code>, starting from the current position or, optionally, the <code>byte</code> offset.</p> <p>Example:</p> <pre><code>local f = io.open(\"text.txt\", \"r\")\nlocal str = io.readstring(f, 5, 3)\nprint(str)\nif f then\n  f:close()\nend\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-io.lua#L452-L459</li> <li>ConTeXt wiki: ConTeXt and Lua programming/Extensions to the Lua IO library</li> </ul>"},{"location":"globals/lfs/","title":"global lfs","text":""},{"location":"globals/lfs/#methods","title":"methods","text":""},{"location":"globals/lfs/#lfsisdir","title":"lfs.isdir","text":"<pre><code>function lfs.isdir(name)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-file.lua#L78-L82</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/lfs/#lfsisfile","title":"lfs.isfile","text":"<pre><code>function lfs.isfile(name)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-file.lua#L84-L89</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/lfs/#lfsisfound","title":"lfs.isfound","text":"<pre><code>function lfs.isfound(name)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-file.lua#L91-L96</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/lfs/#lfsmodification","title":"lfs.modification","text":"<pre><code>function lfs.modification(name)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-file.lua#L98-L100</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/lfs/#lfsmkdirs","title":"lfs.mkdirs","text":"<pre><code>function lfs.mkdirs(path)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-file.lua#L711-L719</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/lfs/#lfsreadlink","title":"lfs.readlink","text":"<pre><code>function lfs.readlink(name)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-file.lua#L746-L748</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/lpeg/","title":"global lpeg","text":""},{"location":"globals/lpeg/#methods","title":"methods","text":""},{"location":"globals/lpeg/#lpegup","title":"lpeg.UP","text":"<pre><code>function lpeg.UP()\n</code></pre> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/lpeg/#lpegur","title":"lpeg.UR","text":"<pre><code>function lpeg.UR()\n</code></pre> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/lpeg/#lpegus","title":"lpeg.US","text":"<pre><code>function lpeg.US()\n</code></pre> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/lpeg/#lpegafterprefix","title":"lpeg.afterprefix","text":"<pre><code>function lpeg.afterprefix()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-lpeg.lua#L616-L624</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/lpeg/#lpeganywhere","title":"lpeg.anywhere","text":"<pre><code>function lpeg.anywhere()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-lpeg.lua#L302-L304</li> <li>ConTeXt wiki: ConTeXt and Lua programming/Extensions to the Lua IO library/String manipulation</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/lpeg/#lpegappend","title":"lpeg.append","text":"<pre><code>function lpeg.append()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-lpeg.lua#L715-L783</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/lpeg/#lpegbalancer","title":"lpeg.balancer","text":"<pre><code>function lpeg.balancer()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-lpeg.lua#L626-L629</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/lpeg/#lpegbeforesuffix","title":"lpeg.beforesuffix","text":"<pre><code>function lpeg.beforesuffix()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-lpeg.lua#L606-L614</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/lpeg/#lpegcontainsws","title":"lpeg.containsws","text":"<pre><code>function lpeg.containsws()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-lpeg.lua#L1185-L1194</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/lpeg/#lpegcounter","title":"lpeg.counter","text":"<pre><code>function lpeg.counter()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-lpeg.lua#L652-L662</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/lpeg/#lpegendstripper","title":"lpeg.endstripper","text":"<pre><code>function lpeg.endstripper()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-lpeg.lua#L501-L503</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/lpeg/#lpegfinder","title":"lpeg.finder","text":"<pre><code>function lpeg.finder()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-lpeg.lua#L548-L576</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/lpeg/#lpegfrontstripper","title":"lpeg.frontstripper","text":"<pre><code>function lpeg.frontstripper()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-lpeg.lua#L497-L499</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/lpeg/#lpeginstringchecker","title":"lpeg.instringchecker","text":"<pre><code>function lpeg.instringchecker()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-lpeg.lua#L308-L313</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/lpeg/#lpegis_lpeg","title":"lpeg.is_lpeg","text":"<pre><code>function lpeg.is_lpeg()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-lpeg.lua#L675-L677</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/lpeg/#lpegoneof","title":"lpeg.oneof","text":"<pre><code>function lpeg.oneof()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-lpeg.lua#L679-L689</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/lpeg/#lpegpcode","title":"lpeg.pcode","text":"<pre><code>function lpeg.pcode()\n</code></pre> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/lpeg/#lpegprint","title":"lpeg.print","text":"<pre><code>function lpeg.print()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-lpeg.lua#L44</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/lpeg/#lpegptree","title":"lpeg.ptree","text":"<pre><code>function lpeg.ptree()\n</code></pre> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/lpeg/#lpegsetutfcasers","title":"lpeg.setutfcasers","text":"<pre><code>function lpeg.setutfcasers()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-lpeg.lua#L846-L849</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/lpeg/#lpegsplitter","title":"lpeg.splitter","text":"<pre><code>function lpeg.splitter()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-lpeg.lua#L323-L329</li> <li>ConTeXt wiki: ConTeXt and Lua programming/Extensions to the Lua IO library/String manipulation</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/lpeg/#lpegsplitat","title":"lpeg.splitat","text":"<pre><code>function lpeg.splitat(\n  delimiter: string,\n  single: boolean?\n) -&gt;  Pattern\n</code></pre> <p>Return a pattern that produces a list of substrings delimited by delimiter (which can be a pattern or a string).</p> <p>The optional boolean single determines whether the string should be split only at the first match.</p> <p>Example:</p> <pre><code>local str = [[\nNumber twenty-three. The shin.\nNumber twenty-four. Reginald Maudling's shin.\nNumber twenty-five. The brain.\nNumber twenty-six. Magaret Thatcher's brain.\nNumber twenty-seven. More naughty bits.\n]]\n\nlocal t = { lpeg.splitat(\"Number\", false):match(str) }\nfor n, element in pairs(t) do\n  element = element == \"\" and element .. \"\\n\" or element\n  io.write(n .. \": \" .. element)\nend\n</code></pre> <p>Reference:</p> <ul> <li>ConTeXt wiki: ConTeXt and Lua programming/Extensions to the Lua IO library/String manipulation</li> </ul>"},{"location":"globals/lpeg/#lpegfirstofsplit","title":"lpeg.firstofsplit","text":"<pre><code>function lpeg.firstofsplit(separator: string) -&gt;  Pattern\n</code></pre> <p>Return a pattern that matches the substring until the first occurrence of separator</p> <p>Example:</p> <pre><code>local str =\n  \"menu = spam, spam, spam, spam, spam, baked beans, spam, spam and spam\"\nprint(lpeg.firstofsplit(\" = \"):match(str))\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-lpeg.lua#L584-L592</li> <li>ConTeXt wiki: ConTeXt and Lua programming/Extensions to the Lua IO library/String manipulation</li> </ul>"},{"location":"globals/lpeg/#lpegsecondofsplit","title":"lpeg.secondofsplit","text":"<pre><code>function lpeg.secondofsplit(separator: string) -&gt;  Pattern\n</code></pre> <p>Match the whole rest after that regardless of any further occurrences of separator.</p> <p>Example:</p> <pre><code>local str =\n  \"menu = spam, spam, spam, spam, spam, baked beans, spam, spam and spam\"\nprint(lpeg.secondofsplit(\" = \"):match(str))\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-lpeg.lua#L594-L602</li> <li>ConTeXt wiki: ConTeXt and Lua programming/Extensions to the Lua IO library/String manipulation</li> </ul>"},{"location":"globals/lpeg/#lpegsplit","title":"lpeg.split","text":"<pre><code>function lpeg.split()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-lpeg.lua#L344-L359</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/lpeg/#lpegcheckedsplit","title":"lpeg.checkedsplit","text":"<pre><code>function lpeg.checkedsplit()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-lpeg.lua#L428-L437</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/lpeg/#lpegstripper","title":"lpeg.stripper","text":"<pre><code>function lpeg.stripper(pattern: (string|Pattern)) -&gt;  Pattern\n</code></pre> <p>Return a pattern that removes either, if the argument is a string, all occurrences of every character of that string or, if the argument is a pattern, all occurrences of that pattern.</p> <p>Example:</p> <pre><code>local str =\n  \"A dromedary has one hump and a camel has a refreshment car, buffet, and ticket collector.\"\nprint(lpeg.stripper(\"aeiou\"):match(str))\nprint(lpeg.stripper(lpeg.P(\"camel \")):match(str))\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-lpeg.lua#L469-L480</li> <li>ConTeXt wiki: ConTeXt and Lua programming/Extensions to the Lua IO library/String manipulation</li> </ul> <p>@see lpeg.keeper</p>"},{"location":"globals/lpeg/#lpegkeeper","title":"lpeg.keeper","text":"<pre><code>function lpeg.keeper(pattern: (string|Pattern)) -&gt;  Pattern\n</code></pre> <p>Remove anything but the string or pattern respectively. Note: <code>string.keeper</code> does not seem to work as expected with patterns consisting of more than one byte, e.g. lpeg.P(\"camel\").</p> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-lpeg.lua#L484-L495</li> </ul> <p>@see lpeg.stripper</p>"},{"location":"globals/lpeg/#lpegreplacer","title":"lpeg.replacer","text":"<pre><code>function lpeg.replacer(table: string[][]) -&gt;  Pattern\n</code></pre> <p>Returns a pattern that substitutes any first elements of a given pair by its second element.</p> <p>The latter can be a string, a hashtable, or a function (whatever fits with lpeg.Cs).</p> <p>Note: Choose the order of elements in table with care. Due to LPEG's matching the leftmost element of disjunction first it might turn out to be as crucial as in the following example:</p> <p>Example:</p> <pre><code>local str = \"Luxury Yacht\"\n\nlocal rep = {\n  [1] = { \"Luxury\", \"Throatwobbler\" },\n  [2] = { \"Yacht\", \"Mangrove\" },\n}\n\nprint(\n  \"My name is spelled \u201c\"\n    .. str\n    .. \"\u201d, but it's pronounced \u201c\"\n    .. lpeg.replacer(rep):match(str)\n    .. \"\u201d.\"\n)\n\nstr = \"aaababaaba\"\nlocal rep1 = {\n  { \"a\", \"x\" },\n  { \"aa\", \"y\" },\n}\n\nlocal rep2 = {\n  { \"aa\", \"y\" },\n  { \"a\", \"x\" },\n}\n\nprint(lpeg.replacer(rep1):match(str))\nprint(lpeg.replacer(rep2):match(str))\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-lpeg.lua#L510-L543</li> <li>ConTeXt wiki: ConTeXt and Lua programming/Extensions to the Lua IO library/String manipulation</li> </ul>"},{"location":"globals/lpeg/#lpegtimes","title":"lpeg.times","text":"<pre><code>function lpeg.times()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-lpeg.lua#L1068-L1070</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/lpeg/#lpegtsplitat","title":"lpeg.tsplitat","text":"<pre><code>function lpeg.tsplitat()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-lpeg.lua#L361-L368</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/lpeg/#lpegtsplitter","title":"lpeg.tsplitter","text":"<pre><code>function lpeg.tsplitter()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-lpeg.lua#L331-L337</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/lpeg/#lpegutfchartabletopattern","title":"lpeg.utfchartabletopattern","text":"<pre><code>function lpeg.utfchartabletopattern()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-lpeg.lua#L895-L971</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/lpeg/#lpegutfreplacer","title":"lpeg.utfreplacer","text":"<pre><code>function lpeg.utfreplacer()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-lpeg.lua#L975-L980</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/lua/","title":"global lua","text":""},{"location":"globals/lua/#methods","title":"methods","text":""},{"location":"globals/lua/#luaload","title":"lua.load","text":"<pre><code>function lua.load(\n  first,\n  ...\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-lua.lua#L61-L69</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/lualibs/","title":"global lualibs","text":""},{"location":"globals/lualibs/#methods","title":"methods","text":""},{"location":"globals/lualibs/#lualibsloadmodule","title":"lualibs.loadmodule","text":"<pre><code>function lualibs.loadmodule()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs.dtx#L527-L536</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/lualibs/#lualibserror","title":"lualibs.error","text":"<pre><code>function lualibs.error()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs.dtx#L506</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/lualibs/#lualibswarn","title":"lualibs.warn","text":"<pre><code>function lualibs.warn()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs.dtx#L506</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/lualibs/#lualibsinfo","title":"lualibs.info","text":"<pre><code>function lualibs.info()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs.dtx#L506</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/math/","title":"global math","text":""},{"location":"globals/math/#methods","title":"methods","text":""},{"location":"globals/math/#mathceiling","title":"math.ceiling","text":"<pre><code>function math.ceiling(d)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-math.lua#L9-L13</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/math/#mathround","title":"math.round","text":"<pre><code>function math.round(x)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-math.lua#L15-L31</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/math/#mathdiv","title":"math.div","text":"<pre><code>function math.div(\n  n,\n  m\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-math.lua#L33-L39</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/math/#mathmod","title":"math.mod","text":"<pre><code>function math.mod(\n  n,\n  m\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-math.lua#L41-L45</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/math/#mathsind","title":"math.sind","text":"<pre><code>function math.sind(d)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-math.lua#L53</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/math/#mathcosd","title":"math.cosd","text":"<pre><code>function math.cosd(d)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-math.lua#L54</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/math/#mathtand","title":"math.tand","text":"<pre><code>function math.tand(d)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-math.lua#L55</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/math/#mathodd","title":"math.odd","text":"<pre><code>function math.odd(n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-math.lua#L61</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/math/#matheven","title":"math.even","text":"<pre><code>function math.even(n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-math.lua#L62</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/math/#mathcosh","title":"math.cosh","text":"<pre><code>function math.cosh(x)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-math.lua#L70-L73</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/math/#mathsinh","title":"math.sinh","text":"<pre><code>function math.sinh(x)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-math.lua#L74-L77</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/math/#mathtanh","title":"math.tanh","text":"<pre><code>function math.tanh(x)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-math.lua#L78-L81</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/math/#mathpow","title":"math.pow","text":"<pre><code>function math.pow(\n  x,\n  y\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-math.lua#L85-L91</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/math/#mathatan2","title":"math.atan2","text":"<pre><code>function math.atan2(x)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-math.lua#L93-L97</li> </ul> <p>@see math.atan</p>"},{"location":"globals/math/#mathldexp","title":"math.ldexp","text":"<pre><code>function math.ldexp(\n  x,\n  e\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-math.lua#L99-L105</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/math/#mathlog10","title":"math.log10","text":"<pre><code>function math.log10(x)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-math.lua#L118-L126</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/math/#mathtype","title":"math.type","text":"<pre><code>function math.type()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-math.lua#L128-L134</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/math/#mathtointeger","title":"math.tointeger","text":"<pre><code>function math.tointeger(n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-math.lua#L136-L148</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/math/#mathult","title":"math.ult","text":"<pre><code>function math.ult(\n  m,\n  n\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-math.lua#L150-L159</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/modules/","title":"global modules","text":"<pre><code>modules : { [string]: Module }\n</code></pre>"},{"location":"globals/number/","title":"global number","text":""},{"location":"globals/number/#methods","title":"methods","text":""},{"location":"globals/number/#numbertobitstring","title":"number.tobitstring","text":"<pre><code>function number.tobitstring(\n  b,\n  m,\n  w\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-number.lua#L25-L99</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/number/#numbervalid","title":"number.valid","text":"<pre><code>function number.valid(\n  str,\n  default\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: ualibs-number.lua#L101-L103</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/number/#numbertoevenhex","title":"number.toevenhex","text":"<pre><code>function number.toevenhex(n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-number.lua#L105-L112</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/number/#numberbytetodecimal","title":"number.bytetodecimal","text":"<pre><code>function number.bytetodecimal(b)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-number.lua#L169-L178</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/number/#numberdecimaltobyte","title":"number.decimaltobyte","text":"<pre><code>function number.decimaltobyte(d)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-number.lua#L180-L189</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/number/#numberidiv","title":"number.idiv","text":"<pre><code>function number.idiv(\n  i,\n  d\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-number.lua#L191-L193</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/number/#numbertonumberf","title":"number.tonumberf","text":"<pre><code>function number.tonumberf(n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-util-dim.lua#L34</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/number/#numbertonumberg","title":"number.tonumberg","text":"<pre><code>function number.tonumberg(n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-util-dim.lua#L35</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/number/#numbertodimen","title":"number.todimen","text":"<pre><code>function number.todimen(\n  n,\n  unit,\n  fmt\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-util-dim.lua#L97-L111</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/number/#numbertopoints","title":"number.topoints","text":"<pre><code>function number.topoints(\n  n,\n  fmt\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-util-dim.lua#L121</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/number/#numbertoinches","title":"number.toinches","text":"<pre><code>function number.toinches(\n  n,\n  fmt\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-util-dim.lua#L122</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/number/#numbertocentimeters","title":"number.tocentimeters","text":"<pre><code>function number.tocentimeters(\n  n,\n  fmt\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-util-dim.lua#L123</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/number/#numbertomillimeters","title":"number.tomillimeters","text":"<pre><code>function number.tomillimeters(\n  n,\n  fmt\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-util-dim.lua#L124</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/number/#numbertoscaledpoints","title":"number.toscaledpoints","text":"<pre><code>function number.toscaledpoints(n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-util-dim.lua#L125-L126</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/number/#numbertobasepoints","title":"number.tobasepoints","text":"<pre><code>function number.tobasepoints(\n  n,\n  fmt\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-util-dim.lua#L127</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/number/#numbertopicas","title":"number.topicas","text":"<pre><code>function number.topicas(\n  n,\n  fmt\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-util-dim.lua#L128</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/number/#numbertodidots","title":"number.todidots","text":"<pre><code>function number.todidots(\n  n,\n  fmt\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-util-dim.lua#L129</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/number/#numbertociceros","title":"number.tociceros","text":"<pre><code>function number.tociceros(\n  n,\n  fmt\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-util-dim.lua#L130</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/number/#numbersplitdimen","title":"number.splitdimen","text":"<pre><code>function number.splitdimen(str)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-util-dim.lua#L151-L153</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/number/#numbertoscaled","title":"number.toscaled","text":"<pre><code>function number.toscaled(d)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-util-dim.lua#L435-L437</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/number/#numberpercent","title":"number.percent","text":"<pre><code>function number.percent(\n  n,\n  d\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-util-dim.lua#L448-L454</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/number/#numberpoints","title":"number.points","text":"<pre><code>function number.points(n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-util-str.lua#L63-L77</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/number/#numbernupoints","title":"number.nupoints","text":"<pre><code>function number.nupoints(n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-util-str.lua#L79-L93</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/number/#numberbasepoints","title":"number.basepoints","text":"<pre><code>function number.basepoints(n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-util-str.lua#L95-L109</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/number/#numbernubasepoints","title":"number.nubasepoints","text":"<pre><code>function number.nubasepoints(n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-util-str.lua#L111-L125</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/number/#numbersigned","title":"number.signed","text":"<pre><code>function number.signed(i)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-util-str.lua#L482-L488</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/number/#numberformatted","title":"number.formatted","text":"<pre><code>function number.formatted(\n  n,\n  sep1,\n  sep2\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-util-str.lua#L512-L532</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/number/#numbercompactfloat","title":"number.compactfloat","text":"<pre><code>function number.compactfloat(\n  n,\n  fmt\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-util-str.lua#L561-L572</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/number/#numbersparseexponent","title":"number.sparseexponent","text":"<pre><code>function number.sparseexponent(\n  f,\n  n\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-util-str.lua#L583-L598</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/number/#numberformattedfloat","title":"number.formattedfloat","text":"<pre><code>function number.formattedfloat(\n  n,\n  b,\n  a\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-util-str.lua#L615-L623</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/number/#numberto16dot16","title":"number.to16dot16","text":"<pre><code>function number.to16dot16(n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-util-str.lua#L1508-L1510</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/optionalrequire/","title":"global optionalrequire","text":"<pre><code>function optionalrequire(...)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-lua.lua#L191-L196</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/os/","title":"global os","text":""},{"location":"globals/os/#methods","title":"methods","text":""},{"location":"globals/os/#osresultof","title":"os.resultof","text":"<pre><code>function os.resultof(command)\n</code></pre> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/os/#oslaunch","title":"os.launch","text":"<pre><code>function os.launch(str)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-os.lua#L246-L251</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/os/#osruntime","title":"os.runtime","text":"<pre><code>function os.runtime()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-os.lua#L262-L264</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/os/#ostimezone","title":"os.timezone","text":"<pre><code>function os.timezone(difference)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-os.lua#L453-L469</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/os/#osuuid","title":"os.uuid","text":"<pre><code>function os.uuid() -&gt; uuid string\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-os.lua#L423-L431</li> </ul>"},{"location":"globals/os/#ospipeto","title":"os.pipeto","text":"<pre><code>function os.pipeto(command)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-os.lua#L236-L238</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/os/#osfulltime","title":"os.fulltime","text":"<pre><code>function os.fulltime(\n  t,\n  default\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-os.lua#L478-L492</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/os/#oslocaltime","title":"os.localtime","text":"<pre><code>function os.localtime(\n  t,\n  default\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-os.lua#L500-L514</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/os/#osconverttime","title":"os.converttime","text":"<pre><code>function os.converttime(\n  t,\n  default\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-os.lua#L516-L523</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/os/#ostoday","title":"os.today","text":"<pre><code>function os.today() -&gt;  osdate\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-os.lua#L527-L529</li> </ul>"},{"location":"globals/os/#osnow","title":"os.now","text":"<pre><code>function os.now() -&gt;  string\n</code></pre> <p>@return  - for example <code>2021-10-22 08:22:54</code>. \ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p> <p>Return the UTC time without timezone, for example <code>2021-10-22 08:22:54</code>.</p> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-os.lua#L533-L535</li> </ul>"},{"location":"globals/os/#oswhich","title":"os.which","text":"<pre><code>function os.which(filename: string) -&gt;  string\n</code></pre> <p>Example:</p> <pre><code>print(os.which(\"inkscape.exe\"))\nprint(os.which(\"inkscape\"))\nprint(os.which(\"gs.exe\"))\nprint(os.which(\"ps2pdf\"))\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-os.lua#L543-L564</li> </ul> <p>@see os.where</p>"},{"location":"globals/os/#oswhere","title":"os.where","text":"<pre><code>function os.where(filename: string) -&gt;  string\n</code></pre> <p>Example:</p> <pre><code>print(os.where(\"inkscape.exe\"))\nprint(os.where(\"inkscape\"))\nprint(os.where(\"gs.exe\"))\nprint(os.where(\"ps2pdf\"))\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-os.lua#L543-L564</li> </ul> <p>@see os.which</p>"},{"location":"globals/os/#osisleapyear","title":"os.isleapyear","text":"<pre><code>function os.isleapyear(year: integer) -&gt;  boolean\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-os.lua#L595-L599</li> </ul>"},{"location":"globals/os/#osnofdays","title":"os.nofdays","text":"<pre><code>function os.nofdays(\n  year: integer,\n  month: integer?,\n  day: integer?\n) -&gt; number_of_days integer\n</code></pre> <p>@return <code>number_of_days</code> - Calculates the number of days of a month if the parameter <code>day</code> is missing. Calculates the number of days of the year if the parameters <code>month</code> and <code>day</code> are missing.</p> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p> <p>Calculate the number of days.</p> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-os.lua#L619-L633</li> </ul>"},{"location":"globals/os/#osweekday","title":"os.weekday","text":"<pre><code>function os.weekday(\n  day,\n  month,\n  year\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-os.lua#L637-L639</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/os/#osvaliddate","title":"os.validdate","text":"<pre><code>function os.validdate(\n  year,\n  month,\n  day\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-os.lua#L641-L658</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/os/#osdate","title":"os.date","text":"<pre><code>function os.date(\n  format: string?,\n  time: integer?\n) -&gt;  (string|osdate)\n</code></pre> <p>Return a string or a table containing date and time, formatted according to the given string format.</p> <p>If the parameter <code>format</code> is missing the format string <code>%Y-%m-%d %H:%M</code> is used.</p> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-os.lua#L660-L666</li> </ul>"},{"location":"globals/os/#ossetexitcode","title":"os.setexitcode","text":"<pre><code>function os.setexitcode(code: (integer|string))\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-os.lua#L675-L677</li> </ul> <p>@see os.exit</p>"},{"location":"globals/os/#osexit","title":"os.exit","text":"<pre><code>function os.exit(code: (integer|string)?)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-os.lua#L679-L687</li> </ul> <p>@see os.setexitcode</p>"},{"location":"globals/os/#fields","title":"fields","text":""},{"location":"globals/os/#osplatform","title":"os.platform","text":"<pre><code>os.platform: string = \"\"\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-os.lua#L404</li> </ul>"},{"location":"globals/os/#oslibsuffix","title":"os.libsuffix","text":"<pre><code>os.libsuffix: string = \"\"\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-os.lua#L210-L214</li> </ul>"},{"location":"globals/os/#osbinsuffix","title":"os.binsuffix","text":"<pre><code>os.binsuffix: string = \"\"\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-os.lua#L210-L214</li> </ul>"},{"location":"globals/package/","title":"global package","text":""},{"location":"globals/package/#methods","title":"methods","text":""},{"location":"globals/package/#packageextralibpath","title":"package.extralibpath","text":"<pre><code>function package.extralibpath()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-package.lua#L233-L235</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/package/#packageextralibpaths","title":"package.extralibpaths","text":"<pre><code>function package.extralibpaths()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-package.lua#L125-L130</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/package/#packageextraluapath","title":"package.extraluapath","text":"<pre><code>function package.extraluapath()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-package.lua#L223-L225</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/package/#packageextraluapaths","title":"package.extraluapaths","text":"<pre><code>function package.extraluapaths()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-package.lua#L118-L123</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/package/#packagelibpaths","title":"package.libpaths","text":"<pre><code>function package.libpaths()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-package.lua#L145-L156</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/package/#packageloadlib","title":"package.loadlib","text":"<pre><code>function package.loadlib()\n</code></pre> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/package/#packageluapaths","title":"package.luapaths","text":"<pre><code>function package.luapaths()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-package.lua#L132-L143</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/package/#packagepoplibpath","title":"package.poplibpath","text":"<pre><code>function package.poplibpath()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-package.lua#L239-L241</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/package/#packagepopluapath","title":"package.popluapath","text":"<pre><code>function package.popluapath()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-package.lua#L229-L231</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/package/#packagepushlibpath","title":"package.pushlibpath","text":"<pre><code>function package.pushlibpath(path)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-package.lua#L236-L238</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/package/#packagepushluapath","title":"package.pushluapath","text":"<pre><code>function package.pushluapath(path)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-package.lua#L226-L228</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/package/#packagesearchpath","title":"package.searchpath","text":"<pre><code>function package.searchpath()\n</code></pre> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/package/#packageseeall","title":"package.seeall","text":"<pre><code>function package.seeall()\n</code></pre> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/set/","title":"global set","text":""},{"location":"globals/set/#methods","title":"methods","text":""},{"location":"globals/set/#setcreate","title":"set.create","text":"<pre><code>function set.create(\n  t,\n  value\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-set.lua#L18</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/set/#settonumber","title":"set.tonumber","text":"<pre><code>function set.tonumber(t)\n</code></pre> <ul> <li>Corresponding Lua source code: lualibs-set.lua#L20-L40</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/set/#settotable","title":"set.totable","text":"<pre><code>function set.totable(n)\n</code></pre> <ul> <li>Corresponding Lua source code: lualibs-set.lua#L42-L48</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/set/#settolist","title":"set.tolist","text":"<pre><code>function set.tolist(n)\n</code></pre> <ul> <li>Corresponding Lua source code: lualibs-set.lua#L50-L63</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/set/#setcontains","title":"set.contains","text":"<pre><code>function set.contains(\n  n,\n  s\n)\n</code></pre> <ul> <li>Corresponding Lua source code: lualibs-set.lua#L65-L74</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/setinspector/","title":"global setinspector","text":"<pre><code>function setinspector(\n  kind,\n  inspector\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-lua.lua#L153-L155</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/statistics/","title":"global statistics","text":"<p>https://github.com/latex3/lualibs/blob/main/lualibs-trac-inf.lua</p>"},{"location":"globals/statistics/#methods","title":"methods","text":""},{"location":"globals/statistics/#statisticshastiming","title":"statistics.hastiming","text":"<pre><code>function statistics.hastiming(instance)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-trac-inf.lua#L37-L39</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/statistics/#statisticsresettiming","title":"statistics.resettiming","text":"<pre><code>function statistics.resettiming(instance)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-trac-inf.lua#L41-L43</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/statistics/#statisticsstarttiming","title":"statistics.starttiming","text":"<pre><code>function statistics.starttiming(\n  instance,\n  reset\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-trac-inf.lua#L102-L116</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/statistics/#statisticsstoptiming","title":"statistics.stoptiming","text":"<pre><code>function statistics.stoptiming(instance)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-trac-inf.lua#L118-L134</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/statistics/#statisticsbenchmarktimer","title":"statistics.benchmarktimer","text":"<pre><code>function statistics.benchmarktimer(instance)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-trac-inf.lua#L136-L149</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/statistics/#statisticselapsed","title":"statistics.elapsed","text":"<pre><code>function statistics.elapsed(instance)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-trac-inf.lua#L151-L158</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/statistics/#statisticscurrenttime","title":"statistics.currenttime","text":"<pre><code>function statistics.currenttime(instance)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-trac-inf.lua#L160-L176</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/statistics/#statisticselapsedtime","title":"statistics.elapsedtime","text":"<pre><code>function statistics.elapsedtime(instance)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-trac-inf.lua#L178-L180</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/statistics/#statisticselapsedindeed","title":"statistics.elapsedindeed","text":"<pre><code>function statistics.elapsedindeed(instance)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-trac-inf.lua#L182-L184</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/statistics/#statisticselapsedseconds","title":"statistics.elapsedseconds","text":"<pre><code>function statistics.elapsedseconds(\n  instance,\n  rest\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-trac-inf.lua#L186-L190</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/statistics/#statisticsregister","title":"statistics.register","text":"<pre><code>function statistics.register(\n  tag,\n  fnc\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-trac-inf.lua#L205-L212</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/statistics/#statisticsshow","title":"statistics.show","text":"<pre><code>function statistics.show()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-trac-inf.lua#L216-L260</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/statistics/#statisticsmemused","title":"statistics.memused","text":"<pre><code>function statistics.memused()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-trac-inf.lua#L262-L269</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/statistics/#statisticsformatruntime","title":"statistics.formatruntime","text":"<pre><code>function statistics.formatruntime(runtime)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-trac-inf.lua#L277-L282</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/statistics/#statisticsruntime","title":"statistics.runtime","text":"<pre><code>function statistics.runtime()\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-trac-inf.lua#L277-L282</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/statistics/#statisticstimed","title":"statistics.timed","text":"<pre><code>function statistics.timed(\n  action,\n  all\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-trac-inf.lua#L286-L299</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/statistics/#statisticstracefunction","title":"statistics.tracefunction","text":"<pre><code>function statistics.tracefunction(\n  base,\n  tag\n)\n</code></pre> <p>Reference:</p> <ul> <li>Corresponding Lua source code: lualibs-trac-inf.lua#L303-L312</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/toboolean/","title":"global toboolean","text":"<p><pre><code>function toboolean(\n  text: string,\n  tolerant: boolean\n) -&gt;  boolean\n</code></pre> @param <code>tolerant</code> - If <code>true</code>, the strings <code>true</code>, <code>yes</code>, <code>on</code>, <code>1</code>, <code>t</code> and the number <code>1</code> all turn into <code>true</code>. Otherwise only <code>true</code> is honoured.</p> <p>Reference:</p> <ul> <li>Context Lua Documents, July 8, 2023: page 84</li> <li>Corresponding Lua source code: lualibs-boolean.lua#L18-L40</li> </ul>"},{"location":"globals/trackers/","title":"global trackers","text":""},{"location":"globals/trackers/#methods","title":"methods","text":""},{"location":"globals/trackers/#trackersdisable","title":"trackers.disable","text":"<pre><code>function trackers.disable()\n</code></pre> <p>https://github.com/latex3/lualibs/blob/a86c5cdf063692ff7d31da439bddd88c1a3ec0c9/lualibs.dtx#L730</p> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/trackers/#trackersenable","title":"trackers.enable","text":"<pre><code>function trackers.enable()\n</code></pre> <p>https://github.com/latex3/lualibs/blob/a86c5cdf063692ff7d31da439bddd88c1a3ec0c9/lualibs.dtx#L729 \ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/trackers/#trackersnewline","title":"trackers.newline","text":"<pre><code>function trackers.newline()\n</code></pre> <p>https://github.com/latex3/lualibs/blob/a86c5cdf063692ff7d31da439bddd88c1a3ec0c9/lualibs.dtx#L724</p> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/trackers/#trackersregister","title":"trackers.register","text":"<pre><code>function trackers.register()\n</code></pre> <p>https://github.com/latex3/lualibs/blob/a86c5cdf063692ff7d31da439bddd88c1a3ec0c9/lualibs.dtx#L741</p> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/url/","title":"global url","text":""},{"location":"globals/url/#methods","title":"methods","text":""},{"location":"globals/url/#urlhashed","title":"url.hashed","text":"<pre><code>function url.hashed(str: string) -&gt;  Url {\n    scheme = string,\n    authority = string,\n    filename = string,\n    path = string,\n    port = string,\n    query = string,\n    queries = table,\n    fragment = string,\n    original = string,\n    noscheme = boolean,\n}\n</code></pre> <p>A string is split into a hash table with these keys using the following function: The hash variant is more tolerant than the split. In the hash there is also a key <code>original</code> that holds the original URL and and the boolean noscheme indicates if there is a scheme at all.</p> <p>Example:</p> <pre><code>url.hashed(\"foo://example.com:2010/alpha/beta?gamma=delta#epsilon\")\nt = {\n    [\"authority\"] = \"example.com:2010\",\n    [\"filename\"] = \"example.com:2010/alpha/beta\",\n    [\"fragment\"] = \"epsilon\",\n    [\"host\"] = \"example.com\",\n    [\"noscheme\"] = false,\n    [\"original\"] = \"foo://example.com:2010/alpha/beta?gamma=delta#epsilon\",\n    [\"path\"] = \"alpha/beta\",\n    [\"port\"] = 2010,\n    [\"queries\"] = {[\"gamma\"] = \"delta\"},\n    [\"query\"] = \"gamma=delta\",\n    [\"scheme\"] = \"foo\"\n}\n\nurl.hashed(\"alpha/beta\")\nt = {\n    [\"authority\"] = \"\",\n    [\"filename\"] = \"alpha/beta\",\n    [\"fragment\"] = \"\",\n    [\"noscheme\"] = true,\n    [\"original\"] = \"alpha/beta\",\n    [\"path\"] = \"alpha/beta\",\n    [\"query\"] = \"\",\n    [\"scheme\"] = \"file\"\n}\n</code></pre> <ul> <li>Corresponding Lua source code: lualibs-url.lua#L184-L250</li> </ul>"},{"location":"globals/url/#urlsplit","title":"url.split","text":"<pre><code>function url.split(str: string) -&gt;  string[]\n</code></pre> <p>Example:</p> <pre><code>url.split(\"foo://example.com:2010/alpha/beta?gamma=delta#epsilon\")\nt={ \"foo\", \"example.com:2010\", \"alpha/beta\", \"gamma=delta\", \"epsilon\" }\n\nurl.split(\"alpha/beta\")\nt = {\"\", \"\", \"\", \"\", \"\"}\n</code></pre> <ul> <li>Corresponding Lua source code: lualibs-url.lua#L132-L134</li> </ul>"},{"location":"globals/url/#urlconstruct","title":"url.construct","text":"<pre><code>function url.construct(hash: Url {\n    scheme = string,\n    authority = string,\n    filename = string,\n    path = string,\n    port = string,\n    query = string,\n    queries = table,\n    fragment = string,\n    original = string,\n    noscheme = boolean,\n}) -&gt;  string\n</code></pre> <ul> <li>Corresponding Lua source code: lualibs-url.lua#L289-L322</li> </ul>"},{"location":"globals/url/#urlhasscheme","title":"url.hasscheme","text":"<pre><code>function url.hasscheme(str: string) -&gt;  (string|false)\n</code></pre> <p>Example:</p> <pre><code>url.hasscheme(\"http://www.pragma-ade.com/cow.png\") -- 'http'\nurl.hasscheme(\"www.pragma-ade.com/cow.png\") -- false\n</code></pre> <ul> <li>Corresponding Lua source code: lualibs-url.lua#L138-L145</li> </ul>"},{"location":"globals/url/#urladdscheme","title":"url.addscheme","text":"<pre><code>function url.addscheme(\n  str: string,\n  scheme: string\n) -&gt;  string\n</code></pre> <p>Example:</p> <pre><code>url.addscheme(\"www.pragma-ade.com/cow.png\",\"http://\")\n-- http://:///www.pragma-ade.com/cow.png\n\nurl.addscheme(\"www.pragma-ade.com/cow.png\")\n-- file:///www.pragma-ade.com/cow.png\n</code></pre> <ul> <li>Corresponding Lua source code: lualibs-url.lua#L279-L287</li> </ul>"},{"location":"globals/url/#urlfilename","title":"url.filename","text":"<pre><code>function url.filename(filename: string) -&gt;  string\n</code></pre> <p>Example:</p> <pre><code>url.filename(\"http://www.pragma-ade.com/cow.png\")\n--http://www.pragma-ade.com/cow.png\n</code></pre> <ul> <li>Corresponding Lua source code: lualibs-url.lua#L326-L330</li> </ul>"},{"location":"globals/url/#urlquery","title":"url.query","text":"<pre><code>function url.query(str: string) -&gt;  table\n</code></pre> <p>Example:</p> <pre><code>url.query(\"a=b&amp;c=d\")\nt = {\n  [\"a\"]=\"b\",\n  [\"c\"]=\"d\",\n}\n</code></pre> <ul> <li>Corresponding Lua source code: lualibs-url.lua#L342-L348</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p> <p>@see url.toquery</p>"},{"location":"globals/url/#urltoquery","title":"url.toquery","text":"<pre><code>function url.toquery(data: table) -&gt;  string\n</code></pre> <p>Example:</p> <pre><code>url.toquery({ a = \"b\", c = \"d\" }) --\"a=b&amp;c=d\"\n</code></pre> <ul> <li>Corresponding Lua source code: lualibs-url.lua#L350-L365</li> </ul> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p> <p>@see url.query</p>"},{"location":"globals/url/#urlbarepath","title":"url.barepath","text":"<pre><code>function url.barepath(path: string)\n</code></pre> <ul> <li>Corresponding Lua source code: lualibs-url.lua#L371-L377</li> </ul>"},{"location":"globals/url/#urldecode","title":"url.decode","text":"<pre><code>function url.decode(str: string)\n</code></pre> <ul> <li>Corresponding Lua source code: lualibs-url.lua#L88</li> </ul>"},{"location":"globals/url/#urlencode","title":"url.encode","text":"<pre><code>function url.encode(str: string)\n</code></pre> <ul> <li>Corresponding Lua source code: lualibs-url.lua#L89</li> </ul>"},{"location":"globals/url/#urlescape","title":"url.escape","text":"<pre><code>function url.escape(str: string)\n</code></pre> <ul> <li>Corresponding Lua source code: lualibs-url.lua#L336-L340</li> </ul>"},{"location":"globals/url/#urlunescape","title":"url.unescape","text":"<pre><code>function url.unescape(str: string)\n</code></pre> <ul> <li>Corresponding Lua source code: lualibs-url.lua#L90</li> </ul>"},{"location":"globals/url/#urlunescapeget","title":"url.unescapeget","text":"<pre><code>function url.unescapeget(str: string)\n</code></pre> <ul> <li>Corresponding Lua source code: lualibs-url.lua#L125-L127</li> </ul>"},{"location":"globals/utf/","title":"global utf","text":""},{"location":"globals/utf/#methods","title":"methods","text":""},{"location":"globals/utf/#utfbyte","title":"utf.byte","text":"<pre><code>function utf.byte()\n</code></pre> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/utf/#utfsub","title":"utf.sub","text":"<pre><code>function utf.sub(\n  str,\n  start,\n  stop\n)\n</code></pre> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/utf/#utflen","title":"utf.len","text":"<pre><code>function utf.len()\n</code></pre> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/utf/#utfvalues","title":"utf.values","text":"<pre><code>function utf.values()\n</code></pre> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/utf/#utfcharacters","title":"utf.characters","text":"<pre><code>function utf.characters()\n</code></pre> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/utf/#utfustring","title":"utf.ustring","text":"<pre><code>function utf.ustring(s)\n</code></pre> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/utf/#utfxstring","title":"utf.xstring","text":"<pre><code>function utf.xstring(s)\n</code></pre> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/utf/#utftocodes","title":"utf.tocodes","text":"<pre><code>function utf.tocodes(\n  str,\n  separator\n)\n</code></pre> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/utf/#utfsplit","title":"utf.split","text":"<pre><code>function utf.split(\n  str,\n  ignorewhitespace\n)\n</code></pre> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/utf/#utfsplitlines","title":"utf.splitlines","text":"<pre><code>function utf.splitlines(str)\n</code></pre> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/utf/#utftotable","title":"utf.totable","text":"<pre><code>function utf.totable(str)\n</code></pre> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/utf/#utfcount","title":"utf.count","text":"<pre><code>function utf.count(\n  str,\n  what\n)\n</code></pre> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/utf/#utfremapper","title":"utf.remapper","text":"<pre><code>function utf.remapper(\n  mapping,\n  option,\n  action\n)\n</code></pre> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/utf/#utfreplacer","title":"utf.replacer","text":"<pre><code>function utf.replacer(t)\n</code></pre> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/utf/#utfsubtituter","title":"utf.subtituter","text":"<pre><code>function utf.subtituter(t)\n</code></pre> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/utf/#utfis_valid","title":"utf.is_valid","text":"<pre><code>function utf.is_valid(str)\n</code></pre> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/utf/#utfchar","title":"utf.char","text":"<pre><code>function utf.char()\n</code></pre> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/utf/#utfchrlen","title":"utf.chrlen","text":"<pre><code>function utf.chrlen(u)\n</code></pre> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/utf/#utffiletype","title":"utf.filetype","text":"<pre><code>function utf.filetype(data)\n</code></pre> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/utf/#utflength","title":"utf.length","text":"<pre><code>function utf.length()\n</code></pre> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/utf/#utfmagic","title":"utf.magic","text":"<pre><code>function utf.magic(f)\n</code></pre> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/utf/#utftoeight","title":"utf.toeight","text":"<pre><code>function utf.toeight(str)\n</code></pre> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/utf/#utftoentities","title":"utf.toentities","text":"<pre><code>function utf.toentities(str)\n</code></pre> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/utf/#utftoutf32string","title":"utf.toutf32string","text":"<pre><code>function utf.toutf32string(n)\n</code></pre> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/utf/#utfutf16_to_utf8_be","title":"utf.utf16_to_utf8_be","text":"<pre><code>function utf.utf16_to_utf8_be(s)\n</code></pre> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/utf/#utfutf16_to_utf8_be_t","title":"utf.utf16_to_utf8_be_t","text":"<pre><code>function utf.utf16_to_utf8_be_t(t)\n</code></pre> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/utf/#utfutf16_to_utf8_le","title":"utf.utf16_to_utf8_le","text":"<pre><code>function utf.utf16_to_utf8_le(s)\n</code></pre> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/utf/#utfutf16_to_utf8_le_t","title":"utf.utf16_to_utf8_le_t","text":"<pre><code>function utf.utf16_to_utf8_le_t(t)\n</code></pre> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/utf/#utfutf16_to_utf8_t","title":"utf.utf16_to_utf8_t","text":"<pre><code>function utf.utf16_to_utf8_t(\n  t,\n  endian\n)\n</code></pre> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/utf/#utfutf32_to_utf8_be","title":"utf.utf32_to_utf8_be","text":"<pre><code>function utf.utf32_to_utf8_be(s)\n</code></pre> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/utf/#utfutf32_to_utf8_be_t","title":"utf.utf32_to_utf8_be_t","text":"<pre><code>function utf.utf32_to_utf8_be_t(t)\n</code></pre> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/utf/#utfutf32_to_utf8_le","title":"utf.utf32_to_utf8_le","text":"<pre><code>function utf.utf32_to_utf8_le(s)\n</code></pre> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/utf/#utfutf32_to_utf8_le_t","title":"utf.utf32_to_utf8_le_t","text":"<pre><code>function utf.utf32_to_utf8_le_t(t)\n</code></pre> <p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"globals/utilities/","title":"global utilities","text":""},{"location":"globals/utilities/#fields","title":"fields","text":""},{"location":"globals/utilities/#utilitiesdebugger","title":"utilities.debugger","text":"<pre><code>utilities.debugger: table\n</code></pre> <p>https://github.com/latex3/lualibs/blob/main/lualibs-util-deb.lua</p>"},{"location":"globals/utilities/#utilitiesfiles","title":"utilities.files","text":"<pre><code>utilities.files: table\n</code></pre> <p>https://github.com/latex3/lualibs/blob/main/lualibs-util-fil.lua</p>"},{"location":"globals/utilities/#utilitiesjson","title":"utilities.json","text":"<pre><code>utilities.json: table\n</code></pre> <p>https://github.com/latex3/lualibs/blob/main/lualibs-util-jsn.lua</p>"},{"location":"globals/utilities/#utilitieslua","title":"utilities.lua","text":"<pre><code>utilities.lua: table\n</code></pre> <p>https://github.com/latex3/lualibs/blob/main/lualibs-util-lua.lua</p>"},{"location":"globals/utilities/#utilitiesparsers","title":"utilities.parsers","text":"<pre><code>utilities.parsers: table\n</code></pre> <p>https://github.com/latex3/lualibs/blob/main/lualibs-util-prs.lua</p>"},{"location":"globals/utilities/#utilitiesstreams","title":"utilities.streams","text":"<pre><code>utilities.streams: table\n</code></pre> <p>https://github.com/latex3/lualibs/blob/main/lualibs-util-sac.lua</p>"},{"location":"globals/utilities/#utilitiesstacker","title":"utilities.stacker","text":"<pre><code>utilities.stacker: table\n</code></pre> <p>https://github.com/latex3/lualibs/blob/main/lualibs-util-sta.lua</p>"},{"location":"globals/utilities/#utilitiesstorage","title":"utilities.storage","text":"<pre><code>utilities.storage: table\n</code></pre> <p>https://github.com/latex3/lualibs/blob/main/lualibs-util-sto.lua</p>"},{"location":"globals/utilities/#utilitiesstrings","title":"utilities.strings","text":"<pre><code>utilities.strings: table\n</code></pre> <p>https://github.com/latex3/lualibs/blob/main/lualibs-util-str.lua</p>"},{"location":"globals/utilities/#utilitiestemplates","title":"utilities.templates","text":"<pre><code>utilities.templates: table\n</code></pre> <p>https://github.com/latex3/lualibs/blob/main/lualibs-util-tpl.lua</p>"},{"location":"types/CharacterGroup/","title":"alias CharacterGroup","text":"<pre><code>(alias) CharacterGroup = (-4|-2|1|2|4)\n</code></pre>"},{"location":"types/Module/","title":"class Module","text":"<p>\ud83d\ude31 Types incomplete or incorrect? \ud83d\ude4f Please contribute!</p>"},{"location":"types/Module/#fields","title":"fields","text":""},{"location":"types/Module/#moduleversion","title":"Module.version","text":"<pre><code>Module.version : string\n</code></pre> <p>for example \"v0.42.0\"</p>"},{"location":"types/Module/#modulecomment","title":"Module.comment","text":"<pre><code>Module.comment : string\n</code></pre> <p>for example \"companion to luat-lib.mkiv\",</p>"},{"location":"types/Module/#moduleauthor","title":"Module.author","text":"<pre><code>Module.author : string\n</code></pre> <p>for example \"Donald Knuth\",</p>"},{"location":"types/Module/#modulecopyright","title":"Module.copyright","text":"<pre><code>Module.copyright : string\n</code></pre> <p>for example \"TeX Development Team\",</p>"},{"location":"types/Module/#modulelicense","title":"Module.license","text":"<pre><code>Module.license : string\n</code></pre> <p>for example \"GPL v2\"</p>"},{"location":"types/StriplinePattern/","title":"alias StriplinePattern","text":"<pre><code>(alias) StriplinePattern = (`prune|`prune|`prune|`retain|`retain|`collapse)\n    | `prune -- and collapse`\n    | `prune -- and no empty`\n    | `prune -- and to space`\n    | `retain -- and collapse`\n    | `retain -- and no empty`\n    | `collapse -- all`\n</code></pre> <p>https://github.com/latex3/lualibs/blob/a86c5cdf063692ff7d31da439bddd88c1a3ec0c9/lualibs-util-str.lua#L294-L304</p>"},{"location":"types/Url/","title":"class Url","text":"<p>Example <code>foo://example.com:2010/alpha/beta?gamma=delta#epsilon</code></p>"},{"location":"types/Url/#fields","title":"fields","text":""},{"location":"types/Url/#urlscheme","title":"Url.scheme","text":"<pre><code>Url.scheme : string\n</code></pre> <p>for example <code>foo</code>.</p>"},{"location":"types/Url/#urlauthority","title":"Url.authority","text":"<pre><code>Url.authority : string\n</code></pre> <p>for example <code>example.com:2010</code>.</p>"},{"location":"types/Url/#urlfilename","title":"Url.filename","text":"<pre><code>Url.filename : string\n</code></pre> <p>for example <code>example.com:2010/alpha/beta</code>.</p>"},{"location":"types/Url/#urlpath","title":"Url.path","text":"<pre><code>Url.path : string\n</code></pre> <p>for example <code>alpha/beta</code>.</p>"},{"location":"types/Url/#urlport","title":"Url.port","text":"<pre><code>Url.port : string\n</code></pre> <p>for example <code>2010</code>.</p>"},{"location":"types/Url/#urlquery","title":"Url.query","text":"<pre><code>Url.query : string\n</code></pre> <p>for example <code>gamma=delta</code>.</p>"},{"location":"types/Url/#urlqueries","title":"Url.queries","text":"<pre><code>Url.queries : table\n</code></pre> <p>for example <code>{[\"gamma\"]=\"delta\"}</code>.</p>"},{"location":"types/Url/#urlfragment","title":"Url.fragment","text":"<pre><code>Url.fragment : string\n</code></pre> <p>for example <code>epsilon</code>.</p>"},{"location":"types/Url/#urloriginal","title":"Url.original","text":"<pre><code>Url.original : string\n</code></pre> <p>for example <code>foo://example.com:2010/alpha/beta?gamma=delta#epsilon\"</code>.</p>"},{"location":"types/Url/#urlnoscheme","title":"Url.noscheme","text":"<pre><code>Url.noscheme : boolean\n</code></pre> <p>for example <code>false</code>.</p>"}]}